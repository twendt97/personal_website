@import './bootstrap/functions';

// Default variable overwrite
// settings
$enable-rounded: false;
$enable-shadows: true;

// colors


@import './bootstrap/variables';

// Variable overwrites that depend on variables of bootstrap (might not always work e.g. primary can not be overwritten here)

// Remainder of required stylsheets
@import "./bootstrap/mixins";
@import "./bootstrap/root";

// Optional stylesheets as needed
@import './bootstrap/utilities';
@import "./bootstrap/reboot";
@import "./bootstrap/type";
@import "./bootstrap/images";
@import "./bootstrap/containers";
@import "./bootstrap/grid";
@import "./bootstrap/helpers";
@import "./bootstrap/buttons";

// utility API
@import "./bootstrap/utilities/api";

@import "./bootstrap/bootstrap.scss";

// Custom code

.white-box-shadow {
    box-shadow: 0 1rem 3rem rgba($white, .175);;
}

.subject-block {
  img {
    width: 100%;
    height: auto;
    min-height: 400px;
    object-fit: cover;
  }

  #title {
    font-size: 50px;
  }

  #cta {
    margin: 0;
    position: absolute;
    top: 80%;
    left: 50%;
    -ms-transform: translate(-50%, -50%);
    transform: translate(-50%, -50%);
  }

  #canvas {
    width: 100%;
    top: 100px;
  }
}

/*
.subject-block{
    .banner-content{
      position: absolute;
      top: 50px;
      width: 100%;
    }
    img{
      width: 100%;
      height: auto;
    }
    span{
      font-size: $bannerHeading;
      display: block;
      text-transform: uppercase;
      font-weight: bold;
      @include mQ(3000px, 1200px){
        font-size: 68px;
      }
    }
    span.sub-title{
      font-weight: normal;
      margin-bottom: 30px;
    }
}*/

$utilities: map-merge(
  $utilities,
  (
    "background-color": (
      property: background-color,
      class: bg,
      local-vars: (
        "bg-opacity": 1
      ),
      values: map-merge(
        $utilities-bg-colors,
        (
          "black": black
        )
      )
    ),
  )
);